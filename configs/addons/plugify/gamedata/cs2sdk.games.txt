"Games"
{
	"cs2"
	{
		"Signatures"
		{
			// String: "CCSPlayerPawnBase::SwitchTeam", just keep in mind this is actually CCSPlayerController::SwitchTeam
			"CCSPlayerController_SwitchTeam"
			{
				"library" 	"server"
				"windows" 	"40 56 57 48 81 EC ? ? ? ? 48 8B F9 8B F2 8B CA"
				"linux" 	"55 48 89 E5 41 55 49 89 FD 89 F7"
			}
			"CBasePlayerController_SetPawn"
			{
				"library" 	"server"
				"windows" 	"44 88 4C 24 20 55 57 41 54 41 56 41 57 48 8D 6C 24 ? 48 81 EC ?"
				"linux" 	"55 48 89 E5 41 57 41 56 41 55 41 54 49 89 FC 53 48 89 F3 48 81 EC C8 00 00 00"
			}
			// Function with 5 arguments next to sv_walkable_normal references
			"TracePlayerBBox"
			{
				"library" 	"server"
				"windows" 	"4C 89 44 24 18 55 53 57 41 55 41 56"
				"linux" 	"55 48 89 E5 41 57 49 89 FF 41 56 49 89 F6 41 55 49 89 CD"
			}
			// Search for "land_%s", this is called after that string is referenced (the one with 4 parameters).
			// (function that calls it also contains "T_Default.SuitLand").
			"EmitSound"
			{
				"library"	"server"
				"windows"	"48 89 5C 24 08 48 89 6C 24 10 48 89 74 24 18 48 89 7C 24 20 41 56 48 83 EC 30 48 8B F9"
				"linux"		"55 48 89 E5 41 57 41 56 49 89 D6 41 55 41 89 F5 41 54 49 89 FC 53 48 83 EC ? 48"
			}
			// String : "CSource2GameClients::StartHLTVServer: game event %s not found.\n" Function right before the first virtual function call
			"LegacyGameEventListener"
			{
				"library"		"server"
				"windows"		 "48 8B 15 ? ? ? ? 48 85 D2 74 ? 85 C9 74"
				"linux"			 "48 8B 05 ? ? ? ? 48 85 C0 74 ? 83 FF 3F 76 ? 31 C0"
			}
			// String: "Multisource %s enabled (%d inputs)\n"
			"CEntityIOOutput_FireOutputInternal"
			{
				"library"		"server"
				"windows"		"48 89 5C 24 18 56 57 41 54 48 83 EC 40"
				"linux"		 	"55 48 89 E5 41 57 41 56 41 55 41 54 49 89 D4 53 48 89 F3 48 83 EC 58"
			}
			// "chicken" is passed to this
			"CreateEntityByName"
			{
				"library"		"server"
				"windows"		"48 83 EC 48 C6 44 24 30 00"
				"linux"			"48 8D 05 ? ? ? ? 55 48 89 FA"
			}
			// "multi_manager" is passed to this
			"CGameEntitySystem_FindEntityByClassName"
			{
				"library"		"server"
				"windows"		"48 83 EC 68 45 33 C9"
				"linux"			"55 45 31 C0 31 C9 48 89 E5 41 54"
			}
			// "commentary_semaphore" is passed to this
			"CGameEntitySystem_FindEntityByName"
			{
				"library"		"server"
				"windows"		"48 81 EC 88 ? ? ? 4D 85 C0"
				"linux"			"48 85 D2 74 ? 55 48 89 E5 41 54"
			}
			// String: "classname"
			"DispatchSpawn"
			{
				"library"		"server"
				"windows"		"48 89 5C 24 10 57 48 83 EC 30 48 8B DA 48 8B F9 48 85 C9"
				"linux"			"48 85 FF 74 2A 55 48 89 E5 41 56"
			}
		}
		"Offsets"
		{
			"QuietPlayerSlot"
			{
				"windows"		"584"
				"linux"			"584"
			}
			"GameEventManager"
			{
				"windows"		"93"
				"linux"			"93"
			}
			"GameEntitySystem"
			{
				"windows"		"88"
				"linux"			"80"
			}
			// 5 functions after one with "Physics_SimulateEntity" "Server Game"
			"Teleport"
			{
				"windows"		"149"
				"linux"			"148"
			}
			// 5 functions after one with "targethealthfrac"
			"CollisionRulesChanged"
			{
				"windows"		"174"
				"linux"			"173"
			}
			// 9 functions after one with "Physics_SimulateEntity" "Server Game"
			"IsEntityPawn"
			{
				"windows"		"153"
				"linux"			"152"
			}
			// Right after IsEntityPawn
			"IsEntityController"
			{
				"windows"		"154"
				"linux"			"153"
			}
			// String: "%s<%i><%s><%s>" ChangeTeam() CTMDBG..."
			"ControllerChangeTeam"
			{
				"windows"		"93"
				"linux"			"92"
			}
			// Look for the kill command, go through its callback and you should a find call like this, with v9 being a pawn pointer:
			// return (*(*v9 + 2832LL))(v9, v27, 0LL);
			// 2832 (354 * 8) is the offset
			"CommitSuicide"
			{
				"windows"		"360"
				"linux"			"360"
			}
			"ControllerRespawn"
			{
				"windows"		"244"
				"linux"			"246"
			}
			// "Player.Respawn"
			"Respawn"
			{
				"windows"		"328"
				"linux"			"329"
			}
			// Check sv_fullupdate
			"ClientOffset"
			{
				"windows"		"624"
				"linux"			"640"
			}
			// Check "Received acknowledgement tick" string
			"ACKOffset"
			{
				"windows"		"316"
				"linux"			"348"
			}
			// Check ProcessUsercmds
			// Note: the pointer points to an array of 150 usercmds, but I don't know why there are 64 bytes after the usercmd struct itself.
			"UsercmdOffset"
			{
				"windows"		"64"
				"linux"			"56"
			}
			// teleport_trigger_debug cvar
			"StartTouch"
			{
				"windows"		"135"
				"linux"			"134"
			}
			"Touch"
			{
				"windows"		"136"
				"linux"			"135"
			}
			"EndTouch"
			{
				"windows"		"137"
				"linux"			"136"
			}
			"GetClientList"
			{
				"windows"		"77"
				"linux"			"79"
			}
		}
	}
}